<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.AllMapper">

	<resultMap type="DangdangBack" id="DangdangBackResult">
		<result property="id"    column="id"    />
		<result property="ddDate"    column="dd_date"    />
		<result property="channelId"    column="channel_id"    />
		<result property="uv"    column="uv"    />
		<result property="addActiveUser"    column="add_active_user"    />
		<result property="coollectingPureNewCustomers"    column="coollecting_pure_new_customers"    />
		<result property="bookingNewCustomersPureInfiltration"    column="booking_new_customers_pure_infiltration"    />
		<result property="orderingOrders"    column="ordering_orders"    />
		<result property="receivingAmount"    column="receiving_amount"    />
		<result property="pureOutOfTheLibrary"    column="pure_out_of_the_library"    />
		<result property="outboundNewCustomersPureInfiltration"    column="outbound_new_customers_pure_infiltration"    />
		<result property="outboundOrderNumber"    column="outbound_order_number"    />
		<result property="outboundAmount"    column="outbound_amount"    />
		<result property="identification"    column="identification"    />
		<result property="dis"    column="dis"    />
	</resultMap>

    <select id="queryDone" resultType="com.ruoyi.system.domain.DangDangAll" parameterType="com.ruoyi.system.domain.DangdangBack">

		SELECT
		fh.fDate,
		fh.fAccount,
		fh.fPlan,
		fh.fUnit,
		fh.fKeyword,
		fh.fShowDate,
		fh.fClick,
		fh.fCost,
		fh.fAppShowData,
		fh.fAppClick,
		fh.fAppCost,
		fh.fLetsShowData,
		fh.fLetsClick,
		fh.fLetsCost,
		fh.fCombination,
		fh.averageClickPrice,
		fh.homepageAverageRanking,
		fh.bid,
		fh.partSpeech,
	fh.clickRate AS clickRate,
		fh.part_speech AS fPartSpeech,
		fh.applet_url AS appletsUrl,
		fh.applet_done AS appletDone,
		fh.mobile_access_url AS MobileAccessUrl,
		fh.secondary_classification AS sec,
		fh.three_level_classification AS tre,
		ht.uv AS doneUv,
		ht.add_active_user AS doneAddActiveUser,
		ht.coollecting_pure_new_customers AS doneCoollectingPureNewCustomers,
		ht.booking_new_customers_pure_infiltration AS doneBookingNewCustomersPureInfiltration,
		ht.ordering_orders AS doneOrderingOrders,
		ht.receiving_amount AS doneReceivingAmount,
		ht.pure_out_of_the_library AS donePureOutOfTheLibrary,
		ht.outbound_new_customers_pure_infiltration AS doneOutboundNewCustomersPureInfiltration,
		ht.outbound_order_number AS doneOutboundOrderNumber,
		ht.outbound_amount AS doneOutboundAmount
		FROM
		(
		SELECT
		f.click_rate AS clickRate,
		f.homepage_average_ranking AS homepageAverageRanking,
		f.average_click_price AS averageClickPrice,
		f.bid ,
		f.part_speech AS partSpeech,
		f.combination AS fCombination,
		f.dd_date AS fDate,
		f.account AS fAccount,
		f.plan AS fPlan,
		f.unit AS fUnit,
		f.keyword AS fKeyword,
		f.showdata AS fShowDate,
		f.click AS fClick,
		f.cost AS fCost,
		f.app_showData AS fAppShowData,
		f.app_click AS fAppClick,
		f.app_cost AS fAppCost,
		f.lets_showdata AS fLetsShowData,
		f.lets_click AS fLetsClick,
		f.lets_cost AS fLetsCost,
		m.mobile_access_url,
		m.applet_url,
		m.applet_done,
		m.part_speech,
		m.secondary_classification,
		m.three_level_classification
		FROM
		(
		SELECT
		s.combination,
		s.account,
		s.dd_date,
		s.plan,
		s.unit,
		s.keyword,
		s.showdata,
		s.click,
		s.cost,
		s.click_rate,
		s.average_click_price,
		s.bid,
		s.homepage_average_ranking,
		s.part_speech,
		w.click AS app_click,
		w.cost AS app_cost,
		w.showdata AS app_showData,
		q.click AS lets_click,
		q.cost AS lets_cost,
		q.showdata AS lets_showData
		FROM
		dangdang_summary AS s
		LEFT JOIN (
		SELECT
		DATE,
		combination,
		SUM( click ) AS click,
		SUM( showdata ) AS showdata,
		SUM( cost ) AS cost
		FROM
		dangdang_app_front
		WHERE
		app = '当当网'
		GROUP BY
		DATE,
		combination
		) AS w ON s.dd_date = w.date
		AND s.combination = w.combination
		LEFT JOIN (
		SELECT
		DATE,
		combination,
		SUM( click ) AS click,
		SUM( showdata ) AS showdata,
		SUM( cost ) AS cost
		FROM
		dangdang_applets_front
		GROUP BY
		DATE,
		combination
		) AS q ON s.dd_date = q.date
		AND s.combination = q.combination
		) AS f
		LEFT JOIN dangdang_match AS m ON f.combination = m.combination
		) AS fh
		LEFT JOIN (
		SELECT
		dd_date,
		channel_id,
		SUM( uv ) AS uv,
		SUM( add_active_user ) AS add_active_user,
		SUM( coollecting_pure_new_customers ) AS coollecting_pure_new_customers,
		SUM( booking_new_customers_pure_infiltration ) AS booking_new_customers_pure_infiltration,
		SUM( ordering_orders ) AS ordering_orders,
		SUM( receiving_amount ) AS receiving_amount,
		SUM( pure_out_of_the_library ) AS pure_out_of_the_library,
		SUM( outbound_new_customers_pure_infiltration ) AS outbound_new_customers_pure_infiltration,
		SUM( outbound_order_number ) AS outbound_order_number,
		SUM( outbound_amount ) AS outbound_amount
		FROM
		dangdang_back
		GROUP BY
		dd_date,
		channel_id
		) AS  ht ON ht.channel_id = fh.applet_done
		AND ht.dd_date = fh.fDate
		where 1=1 <if test="ddDate != null  "> and fh.fDate= #{ddDate}</if>
		ORDER BY
	fh.fDate DESC
    </select>
	<select id="queryUrl" resultMap="DangdangBackResult" parameterType="com.ruoyi.system.domain.DangdangBack">
 SELECT
		ht.uv,
		ht.add_active_user,
		ht.coollecting_pure_new_customers,
		ht.booking_new_customers_pure_infiltration,
		ht.ordering_orders,
		ht.receiving_amount,
		ht.pure_out_of_the_library,
		ht.outbound_new_customers_pure_infiltration,
		ht.outbound_order_number,
		ht.outbound_amount
FROM
	(
	SELECT
		f.combination AS fCombination,
		f.dd_date AS fDate,
		f.account AS fAccount,
		f.plan AS fPlan,
		f.unit AS fUnit,
		f.keyword AS fKeyword,
		f.showdata AS fShowDate,
		f.click AS fClick,
		f.cost AS fCost,
		f.app_showData AS fAppShowData,
		f.app_click AS fAppClick,
		f.app_cost AS fAppCost,
		f.lets_showdata AS fLetsShowData,
		f.lets_click AS fLetsClick,
		f.lets_cost AS fLetsCost,
		m.mobile_access_url,
		m.applet_url,
		m.applet_done
	FROM
		(
		SELECT
			s.combination,
			s.account,
			s.dd_date,
			s.plan,
			s.unit,
			s.keyword,
			s.showdata,
			s.click,
			s.cost,
			s.click_rate,
			s.average_click_price,
			s.bid,
			s.homepage_average_ranking,
			s.part_speech,
			w.click AS app_click,
			w.cost AS app_cost,
			w.showdata AS app_showData,
			q.click AS lets_click,
			q.cost AS lets_cost,
			q.showdata AS lets_showData
		FROM
			dangdang_summary AS s
			LEFT JOIN (
			SELECT
				date,
				combination,
				sum( click ) AS click,
				sum( showdata ) AS showdata,
				SUM( cost ) AS cost
			FROM
				dangdang_app_front
			WHERE
				app = '当当网'
			GROUP BY
				date,
				combination
			) AS w ON s.dd_date = w.date
			AND s.combination = w.combination
			LEFT JOIN (
			SELECT
				date,
				combination,
				sum( click ) AS click,
				sum( showdata ) AS showdata,
				SUM( cost ) AS cost
			FROM
				dangdang_applets_front
			GROUP BY
				date,
				combination
			) AS q ON s.dd_date = q.date
			AND s.combination = q.combination
		) AS f
		LEFT JOIN dangdang_match AS m ON f.combination = m.combination
	) AS fh
	LEFT JOIN
	(SELECT
		dd_date,
		channel_id,
		sum( uv ) AS uv,
		sum( add_active_user ) AS add_active_user,
		sum( coollecting_pure_new_customers ) AS coollecting_pure_new_customers,
		sum( booking_new_customers_pure_infiltration ) AS booking_new_customers_pure_infiltration,
		sum( ordering_orders ) AS ordering_orders,
		sum( receiving_amount ) AS receiving_amount,
		sum( pure_out_of_the_library ) AS pure_out_of_the_library,
		sum( outbound_new_customers_pure_infiltration ) AS outbound_new_customers_pure_infiltration,
		sum( outbound_order_number ) AS outbound_order_number,
		sum( outbound_amount ) AS outbound_amount
	FROM
		dangdang_back
	GROUP BY
		dd_date,
		channel_id
		) as ht ON ht.channel_id = fh.applet_url AND ht.dd_date = fh.fDate
		where 1=1 <if test="ddDate != null  "> and fh.fDate= #{ddDate}</if>
		 ORDER BY fh.fDate desc
	</select>
	<select id="queryMod" resultMap="DangdangBackResult" parameterType="com.ruoyi.system.domain.DangdangBack">
		SELECT
	ht.uv,
	ht.add_active_user,
	ht.coollecting_pure_new_customers,
	ht.booking_new_customers_pure_infiltration,
	ht.ordering_orders,
	ht.receiving_amount,
	ht.pure_out_of_the_library,
	ht.outbound_new_customers_pure_infiltration ,
	ht.outbound_order_number ,
	ht.outbound_amount
		FROM
	(
	SELECT
		f.combination AS fCombination,
		f.dd_date AS fDate,
		f.account AS fAccount,
		f.plan AS fPlan,
		f.unit AS fUnit,
		f.keyword AS fKeyword,
		f.showdata AS fShowDate,
		f.click AS fClick,
		f.cost AS fCost,
		f.app_showData AS fAppShowData,
		f.app_click AS fAppClick,
		f.app_cost AS fAppCost,
		f.lets_showdata AS fLetsShowData,
		f.lets_click AS fLetsClick,
		f.lets_cost AS fLetsCost,
		m.mobile_access_url,
		m.applet_url,
		m.applet_done
	FROM
		(
		SELECT
			s.combination,
			s.account,
			s.dd_date,
			s.plan,
			s.unit,
			s.keyword,
			s.showdata,
			s.click,
			s.cost,
			s.click_rate,
			s.average_click_price,
			s.bid,
			s.homepage_average_ranking,
			s.part_speech,
			w.click AS app_click,
			w.cost AS app_cost,
			w.showdata AS app_showData,
			q.click AS lets_click,
			q.cost AS lets_cost,
			q.showdata AS lets_showData
		FROM
			dangdang_summary AS s
			LEFT JOIN (
			SELECT
				date,
				combination,
				sum( click ) AS click,
				sum( showdata ) AS showdata,
				SUM( cost ) AS cost
			FROM
				dangdang_app_front
			WHERE
				app = '当当网'
			GROUP BY
				date,
				combination
			) AS w ON s.dd_date = w.date
			AND s.combination = w.combination
			LEFT JOIN (
			SELECT
				date,
				combination,
				sum( click ) AS click,
				sum( showdata ) AS showdata,
				SUM( cost ) AS cost
			FROM
				dangdang_applets_front
			GROUP BY
				date,
				combination
			) AS q ON s.dd_date = q.date
			AND s.combination = q.combination
		) AS f
		LEFT JOIN dangdang_match AS m ON f.combination = m.combination
	) AS fh
	LEFT JOIN (
		SELECT
		dd_date,
		channel_id,
		sum(uv) AS uv,
		sum(add_active_user) AS add_active_user,
		sum(coollecting_pure_new_customers) AS coollecting_pure_new_customers,
		sum(booking_new_customers_pure_infiltration) AS booking_new_customers_pure_infiltration,
		sum(ordering_orders) AS ordering_orders,
		sum(receiving_amount) AS receiving_amount,
		sum(pure_out_of_the_library) AS pure_out_of_the_library,
		sum(outbound_new_customers_pure_infiltration ) AS outbound_new_customers_pure_infiltration,
		sum(outbound_order_number) AS outbound_order_number,
		sum(outbound_amount) AS outbound_amount
		FROM
		dangdang_back
		GROUP BY
		dd_date,
		channel_id
		) ht ON ht.channel_id = fh.mobile_access_url
	AND ht.dd_date = fh.fDate
	where 1=1 <if test="ddDate != null  "> and fh.fDate= #{ddDate}</if>
	ORDER BY fh.fDate desc
	</select>
	<select id="otherDone" resultType="java.lang.Integer" parameterType="com.ruoyi.system.domain.DangdangBack">
		SELECT id FROM dangdang_back  WHERE 	id NOT IN
		(SELECT
		ht.id AS id
		FROM
		(
		SELECT
		f.click_rate AS clickRate,
		f.homepage_average_ranking AS homepageAverageRanking,
		f.average_click_price AS averageClickPrice,
		f.bid ,
		f.part_speech AS partSpeech,
		f.combination AS fCombination,
		f.dd_date AS fDate,
		f.account AS fAccount,
		f.plan AS fPlan,
		f.unit AS fUnit,
		f.keyword AS fKeyword,
		f.showdata AS fShowDate,
		f.click AS fClick,
		f.cost AS fCost,
		f.app_showData AS fAppShowData,
		f.app_click AS fAppClick,
		f.app_cost AS fAppCost,
		f.lets_showdata AS fLetsShowData,
		f.lets_click AS fLetsClick,
		f.lets_cost AS fLetsCost,
		m.mobile_access_url,
		m.applet_url,
		m.applet_done,
		m.part_speech
		FROM
		(
		SELECT
		s.combination,
		s.account,
		s.dd_date,
		s.plan,
		s.unit,
		s.keyword,
		s.showdata,
		s.click,
		s.cost,
		s.click_rate,
		s.average_click_price,
		s.bid,
		s.homepage_average_ranking,
		s.part_speech,
		w.click AS app_click,
		w.cost AS app_cost,
		w.showdata AS app_showData,
		q.click AS lets_click,
		q.cost AS lets_cost,
		q.showdata AS lets_showData
		FROM
		dangdang_summary AS s
		LEFT JOIN (
		SELECT
		DATE,
		combination,
		SUM( click ) AS click,
		SUM( showdata ) AS showdata,
		SUM( cost ) AS cost
		FROM
		dangdang_app_front
		WHERE
		app = '当当网'
		GROUP BY
		DATE,
		combination
		) AS w ON s.dd_date = w.date
		AND s.combination = w.combination
		LEFT JOIN (
		SELECT
		DATE,
		combination,
		SUM( click ) AS click,
		SUM( showdata ) AS showdata,
		SUM( cost ) AS cost
		FROM
		dangdang_applets_front
		GROUP BY
		DATE,
		combination
		) AS q ON s.dd_date = q.date
		AND s.combination = q.combination
		) AS f
		LEFT JOIN dangdang_match AS m ON f.combination = m.combination
		) AS fh
		LEFT JOIN
		dangdang_back
		AS  ht ON ht.channel_id = fh.applet_done
		AND ht.dd_date = fh.fDate
		WHERE ht.id IS NOT NULL)
		<if test="ddDate != null  "> and dd_date = #{ddDate}</if>
	</select>
	<select id="otherMOd" resultType="java.lang.Integer" parameterType="com.ruoyi.system.domain.DangdangBack">
		select id FROM dangdang_back  WHERE 	id NOT IN
	(SELECT
		ht.id AS id
		FROM
		(
		SELECT
		f.click_rate AS clickRate,
		f.homepage_average_ranking AS homepageAverageRanking,
		f.average_click_price AS averageClickPrice,
		f.bid ,
		f.part_speech AS partSpeech,
		f.combination AS fCombination,
		f.dd_date AS fDate,
		f.account AS fAccount,
		f.plan AS fPlan,
		f.unit AS fUnit,
		f.keyword AS fKeyword,
		f.showdata AS fShowDate,
		f.click AS fClick,
		f.cost AS fCost,
		f.app_showData AS fAppShowData,
		f.app_click AS fAppClick,
		f.app_cost AS fAppCost,
		f.lets_showdata AS fLetsShowData,
		f.lets_click AS fLetsClick,
		f.lets_cost AS fLetsCost,
		m.mobile_access_url,
		m.applet_url,
		m.applet_done,
		m.part_speech
		FROM
		(
		SELECT
		s.combination,
		s.account,
		s.dd_date,
		s.plan,
		s.unit,
		s.keyword,
		s.showdata,
		s.click,
		s.cost,
		s.click_rate,
		s.average_click_price,
		s.bid,
		s.homepage_average_ranking,
		s.part_speech,
		w.click AS app_click,
		w.cost AS app_cost,
		w.showdata AS app_showData,
		q.click AS lets_click,
		q.cost AS lets_cost,
		q.showdata AS lets_showData
		FROM
		dangdang_summary AS s
		LEFT JOIN (
		SELECT
		DATE,
		combination,
		SUM( click ) AS click,
		SUM( showdata ) AS showdata,
		SUM( cost ) AS cost
		FROM
		dangdang_app_front
		WHERE
		app = '当当网'
		GROUP BY
		DATE,
		combination
		) AS w ON s.dd_date = w.date
		AND s.combination = w.combination
		LEFT JOIN (
		SELECT
		DATE,
		combination,
		SUM( click ) AS click,
		SUM( showdata ) AS showdata,
		SUM( cost ) AS cost
		FROM
		dangdang_applets_front
		GROUP BY
		DATE,
		combination
		) AS q ON s.dd_date = q.date
		AND s.combination = q.combination
		) AS f
		LEFT JOIN dangdang_match AS m ON f.combination = m.combination
		) AS fh
		LEFT JOIN
		dangdang_back
		AS  ht ON ht.channel_id = fh.mobile_access_url
		AND ht.dd_date = fh.fDate
		WHERE ht.id IS NOT NULL)
		<if test="ddDate != null  "> and dd_date = #{ddDate}</if>
	</select>
	<select id="otherUrl" resultType="java.lang.Integer" parameterType="com.ruoyi.system.domain.DangdangBack">
		select id FROM dangdang_back  WHERE 	id NOT IN
		(SELECT
		ht.id AS id
		FROM
		(
		SELECT
		f.click_rate AS clickRate,
		f.homepage_average_ranking AS homepageAverageRanking,
		f.average_click_price AS averageClickPrice,
		f.bid ,
		f.part_speech AS partSpeech,
		f.combination AS fCombination,
		f.dd_date AS fDate,
		f.account AS fAccount,
		f.plan AS fPlan,
		f.unit AS fUnit,
		f.keyword AS fKeyword,
		f.showdata AS fShowDate,
		f.click AS fClick,
		f.cost AS fCost,
		f.app_showData AS fAppShowData,
		f.app_click AS fAppClick,
		f.app_cost AS fAppCost,
		f.lets_showdata AS fLetsShowData,
		f.lets_click AS fLetsClick,
		f.lets_cost AS fLetsCost,
		m.mobile_access_url,
		m.applet_url,
		m.applet_done,
		m.part_speech
		FROM
		(
		SELECT
		s.combination,
		s.account,
		s.dd_date,
		s.plan,
		s.unit,
		s.keyword,
		s.showdata,
		s.click,
		s.cost,
		s.click_rate,
		s.average_click_price,
		s.bid,
		s.homepage_average_ranking,
		s.part_speech,
		w.click AS app_click,
		w.cost AS app_cost,
		w.showdata AS app_showData,
		q.click AS lets_click,
		q.cost AS lets_cost,
		q.showdata AS lets_showData
		FROM
		dangdang_summary AS s
		LEFT JOIN (
		SELECT
		DATE,
		combination,
		SUM( click ) AS click,
		SUM( showdata ) AS showdata,
		SUM( cost ) AS cost
		FROM
		dangdang_app_front
		WHERE
		app = '当当网'
		GROUP BY
		DATE,
		combination
		) AS w ON s.dd_date = w.date
		AND s.combination = w.combination
		LEFT JOIN (
		SELECT
		DATE,
		combination,
		SUM( click ) AS click,
		SUM( showdata ) AS showdata,
		SUM( cost ) AS cost
		FROM
		dangdang_applets_front
		GROUP BY
		DATE,
		combination
		) AS q ON s.dd_date = q.date
		AND s.combination = q.combination
		) AS f
		LEFT JOIN dangdang_match AS m ON f.combination = m.combination
		) AS fh
		LEFT JOIN
		dangdang_back
		AS  ht ON ht.channel_id = fh.applet_url
		AND ht.dd_date = fh.fDate
		WHERE ht.id IS NOT NULL)
		<if test="ddDate != null  "> and dd_date = #{ddDate}</if>

	</select>
	<select id="selectByIds" resultType="com.ruoyi.system.domain.DangDangAll" >
		select '其他' AS fPlan,
		'其他' as fUnit,
		dd_date as fDate,
		IFNULL(SUM( uv ),0) AS uv,
		IFNULL(SUM( add_active_user ),0) AS addActiveUser,
		IFNULL(SUM( coollecting_pure_new_customers ),0) AS coollectingPureNewCustomers,
		IFNULL(SUM( booking_new_customers_pure_infiltration ),0) AS bookingNewCustomersPureInfiltration,
		IFNULL(SUM( ordering_orders ),0) AS orderingOrders,
		IFNULL(SUM( receiving_amount ),0.00) AS receivingAmount,
		IFNULL(SUM( pure_out_of_the_library ),0) AS pureOutOfTheLibrary,
		IFNULL(SUM( outbound_new_customers_pure_infiltration ),0) AS outboundNewCustomersPureInfiltration,
		IFNULL(SUM( outbound_order_number ),0) AS outboundOrderNumber,
		IFNULL(SUM( outbound_amount ),0.00)  AS outboundAmount from dangdang_back where  id in
		<foreach collection="ids" item="ids" open="(" close=")" separator=",">
			#{ids}
		</foreach>
		group by dd_date
	</select>

	<select id="selectIds" resultType="com.ruoyi.system.domain.DangDangAll" >
		select '其他' AS fPlan,
		'其他' as fUnit,
		dd_date as fDate,
		IFNULL( uv ,0) AS uv,
		IFNULL( add_active_user ),0) AS addActiveUser,
		IFNULL( coollecting_pure_new_customers ),0) AS coollectingPureNewCustomers,
		IFNULL( booking_new_customers_pure_infiltration ),0) AS bookingNewCustomersPureInfiltration,
		IFNULL( ordering_orders ),0) AS orderingOrders,
		IFNULL( receiving_amount ),0.00) AS receivingAmount,
		IFNULL(pure_out_of_the_library ),0) AS pureOutOfTheLibrary,
		IFNULL( outbound_new_customers_pure_infiltration ),0) AS outboundNewCustomersPureInfiltration,
		IFNULL( outbound_order_number ),0) AS outboundOrderNumber,
		IFNULL( outbound_amount ),0.00)  AS outboundAmount from dangdang_back where  id =#{id}
	</select>
</mapper>