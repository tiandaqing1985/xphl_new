<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.DangdangPcFrontMapper">
    
    <resultMap type="DangdangPcFront" id="DangdangPcFrontResult">
        <result property="id"    column="id"    />
        <result property="account"    column="account"    />
        <result property="ddDate"    column="dd_date"    />
        <result property="plan"    column="plan"    />
        <result property="unit"    column="unit"    />
        <result property="keyword"    column="keyword"    />
        <result property="showdata"    column="showdata"    />
        <result property="click"    column="click"    />
        <result property="cost"    column="cost"    />
        <result property="clickRate"    column="click_rate"    />
        <result property="avgClickPrice"    column="avg_click_price"    />
        <result property="homeAvgRank"    column="home_avg_rank"    />
        <result property="bid"    column="bid"    />
        <result property="partSpeech"    column="part_speech"    />
    </resultMap>
	
	<sql id="selectDangdangPcFrontVo">
        select id, account, dd_date, plan, unit, keyword, showdata, click, cost, click_rate, avg_click_price, home_avg_rank, bid, part_speech from dangdang_pc_front
    </sql>
	
    <select id="selectDangdangPcFrontList" parameterType="DangdangPcFront" resultMap="DangdangPcFrontResult">
        <include refid="selectDangdangPcFrontVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
             <if test="account != null  and account != '' "> and account = #{account}</if>
             <if test="ddDate != null "> and dd_date = #{ddDate}</if>
             <if test="plan != null  and plan != '' "> and plan = #{plan}</if>
             <if test="unit != null  and unit != '' "> and unit = #{unit}</if>
             <if test="keyword != null  and keyword != '' "> and keyword = #{keyword}</if>
             <if test="showdata != null "> and showdata = #{showdata}</if>
             <if test="click != null "> and click = #{click}</if>
             <if test="cost != null "> and cost = #{cost}</if>
             <if test="clickRate != null  and clickRate != '' "> and click_rate = #{clickRate}</if>
             <if test="avgClickPrice != null "> and avg_click_price = #{avgClickPrice}</if>
             <if test="homeAvgRank != null "> and home_avg_rank = #{homeAvgRank}</if>
             <if test="bid != null "> and bid = #{bid}</if>
             <if test="partSpeech != null  and partSpeech != '' "> and part_speech = #{partSpeech}</if>
         </where>
    </select>
    
    <select id="selectDangdangPcFrontById" parameterType="Integer" resultMap="DangdangPcFrontResult">
        <include refid="selectDangdangPcFrontVo"/>
        where id = #{id}
    </select>
    <select id="importAll" resultType="com.ruoyi.system.domain.DangDangPcAll" parameterType="com.ruoyi.system.domain.DangdangPcFront" >
        SELECT
        a.account,
        a.dd_date AS ddDate,
        a.plan,
        a.unit,
        a.keyword,
        IFNULL(a.showdata, 0) AS showdata,
        IFNULL(a.click, 0) AS click,
        a.cost,
        a.click_rate AS clickRate,
        a.avg_click_price AS avgClickPrice,
        a.home_avg_rank AS homeAvgRank,
        a.bid,
        a.part_speech AS partSpeech,
        a.remarks,
        a.channel_id AS channelId,
        a.word,
        a.second_kind AS secondKind,
        a.thired_kind AS thiredkind,
        a.back,
        a.join_uv AS joinUv,
        c.source,
        IFNULL(c.receiveOrders, 0) AS receiveOrders,
        IFNULL(c.receiveAmount, 0.00) AS receiveAmount,
        IFNULL(c.receiveAccount, 0) AS receiveAccount,
        IFNULL(c.outOrders, 0) AS outOrders,
        IFNULL(c.outAmount, 0.00) AS outAmount,
        IFNULL(c.outNumber, 0) AS outNumber,
        IFNULL(s.uv, 0) AS uv
        FROM
        (SELECT
        f.account,
        f.dd_date,
        f.plan,
        f.unit,
        f.keyword,
        f.showdata,
        f.click,
        f.cost,
        f.click_rate,
        f.avg_click_price,
        f.home_avg_rank,
        f.bid,
        f.part_speech,
        m.remarks,
        m.word,
        m.second_kind,
        m.thired_kind,
        m.back,
        m.join_uv,
        m.channel_id
        FROM
        dangdang_pc_front AS f
        LEFT JOIN dangdang_pc_match AS m
        ON f.account = m.account
        AND f.plan = m.plan
        AND f.unit = m.unit
        AND f.keyword = m.keyword) AS a
        LEFT JOIN
        (SELECT
        dd_date,
        source,
        SUM(receive_orders) AS receiveOrders,
        SUM(receive_amount) AS receiveAmount,
        SUM(receive_account) AS receiveAccount,
        SUM(out_orders) AS outOrders,
        SUM(out_amount) AS outAmount,
        SUM(out_number) AS outNumber
        FROM
        dangdang_pc_back
        GROUP BY dd_date,
        source) AS c
        ON a.back = c.source
        AND a.dd_date = c.dd_date
        LEFT JOIN
        (SELECT
        dd_date,
        combination,
        SUM(uv) AS uv
        FROM
        dangdang_back_search
        GROUP BY dd_date,
        combination) AS s
        ON s.combination = a.join_uv
        AND a.dd_date = s.dd_date
        where 1=1
        <if test="account != null  and account != ''  "> and a.account = #{account}</if>
        <if test="ddDate != null  "> and a.dd_date = #{ddDate}</if>
        <if test="keyword != null  and keyword != ''  "> and a.keyword = #{keyword}</if>
    ORDER BY  a.dd_date ASC
    </select>
    <select id="other" resultType="com.ruoyi.system.domain.DangDangPcAll" parameterType="com.ruoyi.system.domain.DangdangPcFront">
        SELECT
       '其他'  AS account,
       dd_date as ddDate,
          SUM(receive_orders) AS receiveOrders,
        SUM(receive_amount) AS receiveAmount,
        SUM(receive_account) AS receiveAccount,
        SUM(out_orders) AS outOrders,
        SUM(out_amount) AS outAmount,
        SUM(out_number) AS outNumber
        FROM
        dangdang_pc_back
        WHERE id NOT IN
        (SELECT
        c.id
        FROM
        (SELECT
        f.account,
        f.dd_date,
        f.plan,
        f.unit,
        f.keyword,
        f.showdata,
        f.click,
        f.cost,
        f.click_rate,
        f.avg_click_price,
        f.home_avg_rank,
        f.bid,
        f.part_speech,
        m.remarks,
        m.word,
        m.second_kind,
        m.thired_kind,
        m.back,
        m.join_uv,
        m.channel_id
        FROM
        dangdang_pc_front AS f
        LEFT JOIN dangdang_pc_match AS m
        ON f.account = m.account
        AND f.plan = m.plan
        AND f.unit = m.unit
        AND f.keyword = m.keyword) AS a
        LEFT JOIN dangdang_pc_back AS c
        ON a.back = c.source
        AND a.dd_date = c.dd_date
        WHERE c.id IS NOT NULL
        ORDER BY a.dd_date ASC)
  GROUP  BY dd_date
    </select>

    <insert id="insertDangdangPcFront" parameterType="DangdangPcFront" useGeneratedKeys="true" keyProperty="id">
        insert into dangdang_pc_front
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="account != null  and account != ''  ">account,</if>
			<if test="ddDate != null  ">dd_date,</if>
			<if test="plan != null  and plan != ''  ">plan,</if>
			<if test="unit != null  and unit != ''  ">unit,</if>
			<if test="keyword != null  and keyword != ''  ">keyword,</if>
			<if test="showdata != null  ">showdata,</if>
			<if test="click != null  ">click,</if>
			<if test="cost != null  ">cost,</if>
			<if test="clickRate != null  and clickRate != ''  ">click_rate,</if>
			<if test="avgClickPrice != null  ">avg_click_price,</if>
			<if test="homeAvgRank != null  ">home_avg_rank,</if>
			<if test="bid != null  ">bid,</if>
			<if test="partSpeech != null  and partSpeech != ''  ">part_speech,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="account != null  and account != ''  ">#{account},</if>
			<if test="ddDate != null  ">#{ddDate},</if>
			<if test="plan != null  and plan != ''  ">#{plan},</if>
			<if test="unit != null  and unit != ''  ">#{unit},</if>
			<if test="keyword != null  and keyword != ''  ">#{keyword},</if>
			<if test="showdata != null  ">#{showdata},</if>
			<if test="click != null  ">#{click},</if>
			<if test="cost != null  ">#{cost},</if>
			<if test="clickRate != null  and clickRate != ''  ">#{clickRate},</if>
			<if test="avgClickPrice != null  ">#{avgClickPrice},</if>
			<if test="homeAvgRank != null  ">#{homeAvgRank},</if>
			<if test="bid != null  ">#{bid},</if>
			<if test="partSpeech != null  and partSpeech != ''  ">#{partSpeech},</if>
         </trim>
    </insert>
	 
    <update id="updateDangdangPcFront" parameterType="DangdangPcFront">
        update dangdang_pc_front
        <trim prefix="SET" suffixOverrides=",">
            <if test="account != null  and account != ''  ">account = #{account},</if>
            <if test="ddDate != null  ">dd_date = #{ddDate},</if>
            <if test="plan != null  and plan != ''  ">plan = #{plan},</if>
            <if test="unit != null  and unit != ''  ">unit = #{unit},</if>
            <if test="keyword != null  and keyword != ''  ">keyword = #{keyword},</if>
            <if test="showdata != null  ">showdata = #{showdata},</if>
            <if test="click != null  ">click = #{click},</if>
            <if test="cost != null  ">cost = #{cost},</if>
            <if test="clickRate != null  and clickRate != ''  ">click_rate = #{clickRate},</if>
            <if test="avgClickPrice != null  ">avg_click_price = #{avgClickPrice},</if>
            <if test="homeAvgRank != null  ">home_avg_rank = #{homeAvgRank},</if>
            <if test="bid != null  ">bid = #{bid},</if>
            <if test="partSpeech != null  and partSpeech != ''  ">part_speech = #{partSpeech},</if>
        </trim>
        where id = #{id}
    </update>

	<delete id="deleteDangdangPcFrontById" parameterType="Integer">
        delete from dangdang_pc_front where id = #{id}
    </delete>
    <insert id="batchInsert"  parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO dangdang_pc_front (account,dd_date,plan,unit,keyword,showdata,
        click,cost,click_rate,avg_click_price,home_avg_rank,bid,part_speech)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.account}, #{item.ddDate},#{item.plan},#{item.unit},#{item.keyword},
            #{item.showdata},#{item.click},#{item.cost},
            #{item.clickRate},#{item.avgClickPrice},#{item.homeAvgRank},#{item.bid},#{item.partSpeech})
        </foreach>
    </insert>
    <delete id="deleteDangdangPcFrontByIds" parameterType="String">
        delete from dangdang_pc_front where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>